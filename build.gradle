// 第一次使用请在 gradle \ wrapper \ gradle-wrapper.properties 中更改 distributionUrl 的内容

buildscript {
    ext {
        kotlin_version = "1.3.40"
    }
    repositories {
        maven { url = 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url = 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven {
            name = "forge"
            url = "https://lss233.com/artifactory/minecraft"
        }
    }
    dependencies {
        classpath files('fgow-1.2.1.jar')
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "kotlin"
apply plugin: 'net.minecraftforge.gradle.forge'

group = 'nmmoc7'
version = '1.0-SNAPSHOT'
archivesBaseName = 'asmallmod'

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        name = "maven"
        url = "http://maven.oschina.net/content/groups/public/"
    }
    maven { url = 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url = 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
    maven { url = "http://maven.shadowfacts.net/" }
    mavenCentral()
}

dependencies {
    compile group: "net.shadowfacts", name: "Forgelin", version: "1.8.3"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

sourceSets { main { output.resourcesDir = output.classesDir } }